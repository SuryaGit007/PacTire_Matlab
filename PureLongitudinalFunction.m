function [ forceData, tireData, mfData ] = PureLongitudinalFunction(forceData, slipData, velocities, tireData, mfData)
%SLIPCURVEATTEMPT2 Summary of this function goes here
%   Detailed explanation goes here

Fprime_z0=forceData.F_z0*tireData.lambda_Fz0;
forceData.df_z=-(forceData.F_z-forceData.Fprime_z0)/forceData.Fprime_z0;
%forceData.df_z = -1.0232e-15; %From Marcuss Code
epsilons.eps_x=1;%This is just an arbitrary value. What should it be??
epsilons.eps_Vx=1;%This is just an arbitrary value. What should it be??

tireData.lambdaStar_mux=tireData.lambda_mux/(1+tireData.lambda_muV*...
    (velocities.V_s/tireData.V_0));


A_mu=10;%SuggestedValue
tireData.lambdaPrime_mux=A_mu*tireData.lambdaStar_mux/(1+...
    (A_mu-1)*tireData.lambdaStar_mux);

mfData.longitudinalForce.S_Hx    = (tireData.p_Hx1 + tireData.p_Hx2 * ...
    forceData.df_z) * tireData.lambda_Hx;

kappa_x = slipData.kappa + ...
    mfData.longitudinalForce.S_Hx;

mfData.longitudinalForce.C_x     = tireData.p_Cx1 * tireData.lambda_Cx;

mfData.longitudinalForce.mu_x    = (tireData.p_Dx1 + tireData.p_Dx2 * ...
    forceData.df_z) * tireData.lambdaStar_mux;

mfData.longitudinalForce.D_x     = mfData.longitudinalForce.mu_x * ...
    forceData.F_z * mfData.zeta_1;

mfData.longitudinalForce.E_x     = (tireData.p_Ex1 + tireData.p_Ex2 * ...
    forceData.df_z + tireData.p_Ex3 * forceData.df_z*forceData.df_z) * (1 - ...
    tireData.p_Ex4*sign(kappa_x)) * ...
    tireData.lambda_Ex;

mfData.longitudinalForce.K_xKap  = forceData.F_z * (tireData.p_Kx1 + ...
    tireData.p_Kx2 * forceData.df_z) * exp (tireData.p_Kx3*forceData.df_z) * ...
    tireData.lambda_KxKap;

mfData.longitudinalForce.B_x     = mfData.longitudinalForce.K_xKap / ...
    (mfData.longitudinalForce.C_x * mfData.longitudinalForce.D_x + ...
    epsilons.eps_x);

mfData.longitudinalForce.S_Vx    = forceData.F_z * (tireData.p_Vx1 + ...
    tireData.p_Vx2 * forceData.df_z) * (abs(velocities.V_cx)/(epsilons.eps_Vx + ...
    abs(velocities.V_cx))) * tireData.lambda_Vx * tireData.lambdaPrime_mux * ...
    mfData.zeta_1;

forceData.F_x0    = mfData.longitudinalForce.D_x * ...
    sin( mfData.longitudinalForce.C_x * ...
    atan( mfData.longitudinalForce.B_x * kappa_x - ...
    mfData.longitudinalForce.E_x * (mfData.longitudinalForce.B_x * ...
   kappa_x - atan(mfData.longitudinalForce.B_x * ...
   kappa_x)))) + mfData.longitudinalForce.S_Vx;



end

