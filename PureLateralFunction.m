function [ forceData, tireData, mfData ] = PureLateralFunction(forceData,...
    slipData, velocities, tireData, mfData)
%PURELATERALFUNCTION Summary of this function goes here
%   Detailed explanation goes here 

tireData.FPrime_z0=forceData.F_z0*tireData.lambda_Fz0;
V_s=10;
A_mu=10;%SuggestedValue
mfData.zeta_0=1; %What should this actually be? Documentation is vague...
mfData.zeta_2=1; %What should this actually be? Documentation is vague...
mfData.zeta_3=1; %What should this actually be? Documentation is vague...
mfData.zeta_4=1; %What should this actually be? Documentation is vague...
epsilons.eps_y=1;%This is just an arbitrary value. What should it be??
epsilons.eps_K=1;%This is just an arbitrary value. What should it be??


tireData.lambdaStar_muy=tireData.lambda_muy/(1+tireData.lambda_muV*...
    (V_s/tireData.V_0));

tireData.lambdaPrime_muy=A_mu*tireData.lambdaStar_muy/(1+...
    (A_mu-1)*tireData.lambdaStar_muy);




%Normal Load Considerations:

tireData.R_l      = tireData.R_0 - (tireData.F_z0 / (tireData.p_z1 * ...
    tireData.lambda_Cz * (tireData.FPrime_z0 / tireData.R_0)));

tireData.rho_z    = max( (tireData.R_0 - tireData.R_l) * ...
    cos(slipData.gamma) + tireData.R_c * (1 - cos(slipData.gamma)) , 0 );

forceData.F_z      = tireData.p_z1 * (tireData.FPrime_z0 / tireData.R_0) * ...
    tireData.rho_z * tireData.lambda_Cz;



%Lateral Force Considerations
mfData.lateralForce.K_yGam0 = forceData.F_z * (tireData.p_Ky6 + tireData.p_Ky7 * ...
    forceData.df_z) * tireData.lambda_KyGam;

mfData.lateralForce.C_y     = tireData.p_Cy1 * tireData.lambda_Cy;

mfData.lateralForce.mu_y    = ((tireData.p_Dy1 + tireData.p_Dy2*forceData.df_z) / ...
    (1 + tireData.p_Dy3 * slipData.gammaStar*slipData.gammaStar)) * tireData.lambdaStar_muy;

mfData.lateralForce.D_y     =  mfData.lateralForce.mu_y * forceData.F_z * ...
    mfData.zeta_2;

mfData.lateralForce.K_yAlp  = tireData.p_Ky1 * tireData.FPrime_z0 * ( sin( ...
    tireData.p_Ky4 * atan( forceData.F_z / ((tireData.p_Ky2 + tireData.p_Ky5 * ...
   slipData.gammaStar*slipData.gammaStar) * tireData.FPrime_z0))) / (1 + tireData.p_Ky3 * ...
    slipData.gammaStar*slipData.gammaStar) ) * mfData.zeta_3 * tireData.lambda_KyAlp;

mfData.lateralForce.B_y     = mfData.lateralForce.K_yAlp / (mfData.lateralForce.C_y * ...
    mfData.lateralForce.D_y + epsilons.eps_y);

mfData.lateralForce.S_VyGam = forceData.F_z * (tireData.p_Vy3 + tireData.p_Vy4 * ...
    forceData.df_z) * slipData.gammaStar * tireData.lambda_KyGam * ...
    tireData.lambdaPrime_muy * mfData.zeta_2;

mfData.lateralForce.S_Hy    = (tireData.p_Hy1 + tireData.p_Hy2*forceData.df_z) * ...
    tireData.lambda_Hy + (mfData.lateralForce.K_yGam0 * slipData.gammaStar - ...
    mfData.lateralForce.S_VyGam) * mfData.zeta_0 / (mfData.lateralForce.K_yAlp + ...
    epsilons.eps_K) + mfData.zeta_4 - 1;

mfData.lateralForce.alpha_y = slipData.alphaStar + mfData.lateralForce.S_Hy;

mfData.lateralForce.E_y     = (tireData.p_Ey1 + tireData.p_Ey2*forceData.df_z) * ...
    (1 + tireData.p_Ey5 * slipData.gammaStar*slipData.gammaStar - ...
    (tireData.p_Ey3 + tireData.p_Ey4 * slipData.gammaStar) * ...
    sign(mfData.lateralForce.alpha_y)) * tireData.lambda_Ey;

mfData.lateralForce.S_Vy    = forceData.F_z * (tireData.p_Vy1 + ...
    tireData.p_Vy2 * forceData.df_z) * tireData.lambda_Vy * tireData.lambdaPrime_muy * ...
    mfData.zeta_2 + mfData.lateralForce.S_VyGam;

forceData.F_y0    = mfData.lateralForce.D_y * sin( mfData.lateralForce.C_y * ...
    atan( mfData.lateralForce.B_y*mfData.lateralForce.alpha_y - ...
    mfData.lateralForce.E_y * (mfData.lateralForce.B_y*mfData.lateralForce.alpha_y - ...
    atan(mfData.lateralForce.B_y*mfData.lateralForce.alpha_y)))) + ...
    mfData.lateralForce.S_Vy;

end

