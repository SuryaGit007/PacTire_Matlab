function [ forceData, tireData, mfData ] = PureAligningTorqueFunction( forceData, slipData, tireData, mfData)
%PUREALIGNINGTORQUEFUNCTION Summary of this function goes here
%   Detailed explanation goes here

tireData.FPrime_z0=tireData.F_z0*tireData.lambda_Fz0;
V_s=10;
A_mu=10;%SuggestedValue

epsilons.eps_y=1; %This is just an arbitrary value. What should it be??
epsilons.eps_K=1; %This is just an arbitrary value. What should it be??
epsilons.eps_V=1; %This is just an arbitrary value. What should it be??
velocities.V_c=12; %Arbitrary
velocities.V_cx=10; %Arbitrary to make steady state...
velocities.V_cy=2;

tireData.lambdaStar_muy=tireData.lambda_muy/(1+tireData.lambda_muV*...
    (V_s/tireData.V_0));

tireData.lambdaPrime_muy=A_mu*tireData.lambdaStar_muy/(1+...
    (A_mu-1)*tireData.lambdaStar_muy);

%Aligning Torque Considerations
mfData.cosPrimeAlpha = velocities.V_cx / (velocities.V_c + epsilons.eps_V);

mfData.aligningTorque.B_r = (tireData.q_Bz9 * (tireData.lambda_KyAlp / ...
    tireData.lambdaStar_muy) + tireData.q_Bz10 * mfData.lateralForce.B_y * ...
    mfData.lateralForce.C_y) * mfData.zeta_6;

mfData.aligningTorque.C_r = mfData.zeta_7;

mfData.aligningTorque.D_r = forceData.F_z * tireData.R_0 * ((tireData.q_Dz6 + ...
    tireData.q_Dz7 * forceData.df_z) * tireData.lambda_Mr * mfData.zeta_2 + ...
    (tireData.q_Dz8 + tireData.q_Dz9 * forceData.df_z) * slipData.gammaStar * ...
    tireData.lambda_KzGam * mfData.zeta_0 + ...
    (tireData.q_Dz10 + tireData.q_Dz11 * forceData.df_z) * slipData.gammaStar * ...
    abs(slipData.gammaStar) * mfData.zeta_0) * ...
    mfData.cosPrimeAlpha * tireData.lambdaStar_muy * sign(velocities.V_cx) + ...
    mfData.zeta_8 - 1;

mfData.aligningTorque.B_t = (tireData.q_Bz1 + tireData.q_Bz2 * forceData.df_z + ...
    tireData.q_Bz3 * forceData.df_z*forceData.df_z) * (1 + tireData.q_Bz5 * ...
    abs(slipData.gammaStar) + tireData.q_Bz6 * slipData.gammaStar*slipData.gammaStar) * ...
    tireData.lambda_KyAlp / ...
    tireData.lambdaStar_muy;

mfData.aligningTorque.C_t = tireData.q_Cz1;

mfData.aligningTorque.D_t0 = forceData.F_z * (tireData.R_0 / ...
    tireData.FPrime_z0) * (tireData.q_Dz1 + tireData.q_Dz2 * forceData.df_z) * ...
    tireData.lambda_t * ...
    sign(velocities.V_cx);

mfData.aligningTorque.D_t = mfData.aligningTorque.D_t0 * (1 + tireData.q_Dz3 * ...
    abs(slipData.gammaStar) + tireData.q_Dz4 * slipData.gammaStar*...
    slipData.gammaStar) * mfData.zeta_5;

mfData.aligningTorque.KPrime_yAlp = mfData.lateralForce.K_yAlp + epsilons.eps_K;

mfData.aligningTorque.S_Hf = mfData.lateralForce.S_Hy + ...
    mfData.lateralForce.S_Vy / mfData.aligningTorque.KPrime_yAlp;

mfData.aligningTorque.alpha_r = slipData.alphaStar + mfData.aligningTorque.S_Hf;

mfData.aligningTorque.S_Ht = tireData.q_Hz1 + tireData.q_Hz2 * ...
    forceData.df_z + (tireData.q_Hz3 + tireData.q_Hz4 * forceData.df_z) * ...
    slipData.gammaStar;

mfData.aligningTorque.alpha_t = slipData.alphaStar * mfData.aligningTorque.S_Ht;

mfData.aligningTorque.E_t = (tireData.q_Ez1 + tireData.q_Ez2 * forceData.df_z + ...
    tireData.q_Ez3 * forceData.df_z*forceData.df_z) * (1 + (tireData.q_Ez4 + ...
    tireData.q_Ez5 * slipData.gammaStar) * (2/pi) * atan(mfData.aligningTorque.B_t * ...
    mfData.aligningTorque.C_t * mfData.aligningTorque.alpha_t));

mfData.aligningTorque.t0 = mfData.aligningTorque.D_t * ...
    cos(mfData.aligningTorque.C_t * atan(mfData.aligningTorque.B_t * ...
    mfData.aligningTorque.alpha_t - mfData.aligningTorque.E_t * ...
    (mfData.aligningTorque.B_t * mfData.aligningTorque.alpha_t - atan(...
    mfData.aligningTorque.B_t*mfData.aligningTorque.alpha_t)))) * ...
    mfData.cosPrimeAlpha;

mfData.aligningTorque.MPrime_z0 = -mfData.aligningTorque.t0 * forceData.F_y0;

mfData.aligningTorque.M_zr0 = mfData.aligningTorque.D_r * ...
    cos(mfData.aligningTorque.C_r * atan(mfData.aligningTorque.B_r * ...
    mfData.aligningTorque.alpha_r));

forceData.M_z0 = mfData.aligningTorque.MPrime_z0 + mfData.aligningTorque.M_zr0;


%{
%=========================================================================%
% This function computes the quantities needed to calculate the
% self-aligning torque for pure side slip.
%=========================================================================%

%mfData.cosPrimeAlpha = velocities.V_cx / (velocities.V_c + epsilons.eps_V);


%mfData.aligningTorque.B_r = (tireData.q_Bz9 * (tireData.lambda_KyAlp / ...
    tireData.lambdaStar_muy) + tireData.q_Bz10 * mfData.lateralForce.B_y * ...
    mfData.lateralForce.C_y) * mfData.zeta_6;

%mfData.aligningTorque.C_r = mfData.zeta_7;

%mfData.aligningTorque.D_r = forceData.F_z * tireData.R_0 * ((tireData.q_Dz6 + ...
    tireData.q_Dz7 * forceData.df_z) * tireData.lambda_Mr * mfData.zeta_2 + ...
    (tireData.q_Dz8 + tireData.q_Dz9 * forceData.df_z) * slipData.gammaStar * ...
    tireData.lambda_KzGam * mfData.zeta_0 + ...
    (tireData.q_Dz10 + tireData.q_Dz11 * forceData.df_z) * slipData.gammaStar * ...
    abs(slipData.gammaStar) * mfData.zeta_0) * ...
    mfData.cosPrimeAlpha * tireData.lambdaStar_muy * sign(velocities.V_cx) + ...
    mfData.zeta_8 - 1;

%mfData.aligningTorque.B_t = (tireData.q_Bz1 + tireData.q_Bz2 * forceData.df_z + ...
    tireData.q_Bz3 * forceData.df_z*forceData.df_z) * (1 + tireData.q_Bz5 * ...
    abs(slipData.gammaStar) + tireData.q_Bz6 * slipData.gammaStar*slipData.gammaStar) * ...
    tireData.lambda_KyAlp / ...
    tireData.lambdaStar_muy;

%mfData.aligningTorque.C_t = tireData.q_Cz1;

%mfData.aligningTorque.D_t0 = forceData.F_z * (tireData.R_0 / ...
    tireData.FPrime_z0) * (tireData.q_Dz1 + tireData.q_Dz2 * forceData.df_z) * ...
    tireData.lambda_t * ...
    sign(velocities.V_cx);

%mfData.aligningTorque.D_t = mfData.aligningTorque.D_t0 * (1 + tireData.q_Dz3 * ...
    abs(slipData.gammaStar) + tireData.q_Dz4 * slipData.gammaStar*...
    slipData.gammaStar) * mfData.zeta_5;

%mfData.aligningTorque.KPrime_yAlp = mfData.lateralForce.K_yAlp + epsilons.eps_K;

%mfData.aligningTorque.S_Hf = mfData.lateralForce.S_Hy + ...
    mfData.lateralForce.S_Vy / mfData.aligningTorque.KPrime_yAlp;

%mfData.aligningTorque.alpha_r = slipData.alphaStar + mfData.aligningTorque.S_Hf;

%mfData.aligningTorque.S_Ht = tireData.q_Hz1 + tireData.q_Hz2 * ...
    forceData.df_z + (tireData.q_Hz3 + tireData.q_Hz4 * forceData.df_z) * ...
    slipData.gammaStar;

%mfData.aligningTorque.alpha_t = slipData.alphaStar * mfData.aligningTorque.S_Ht;

mfData.aligningTorque.E_t = (tireData.q_Ez1 + tireData.q_Ez2 * forceData.df_z + ...
    tireData.q_Ez3 * forceData.df_z*forceData.df_z) * (1 + (tireData.q_Ez4 + ...
    tireData.q_Ez5 * slipData.gammaStar) * (2/pi) * atan(mfData.aligningTorque.B_t * ...
    mfData.aligningTorque.C_t * mfData.aligningTorque.alpha_t));

mfData.aligningTorque.t0 = mfData.aligningTorque.D_t * ...
    cos(mfData.aligningTorque.C_t * atan(mfData.aligningTorque.B_t * ...
    mfData.aligningTorque.alpha_t - mfData.aligningTorque.E_t * ...
    (mfData.aligningTorque.B_t * mfData.aligningTorque.alpha_t - atan(...
    mfData.aligningTorque.B_t*mfData.aligningTorque.alpha_t)))) * ...
    mfData.cosPrimeAlpha;

mfData.aligningTorque.MPrime_z0 = -mfData.aligningTorque.t0 * forceData.F_y0;

mfData.aligningTorque.M_zr0 = mfData.aligningTorque.D_r * ...
    cos(mfData.aligningTorque.C_r * atan(mfData.aligningTorque.B_r * ...
    mfData.aligningTorque.alpha_r));

%=========================================================================%

forceData.M_z0 = mfData.aligningTorque.MPrime_z0 + mfData.aligningTorque.M_zr0;
%}

end

